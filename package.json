{
  "name": "dfcomps.ru",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js && husky install",
    "frontend": "nx serve frontend --open",
    "frontend-local": "nx serve frontend --open --configuration=local-backend",
    "frontend:build": "nx build frontend",
    "frontend:server": "superstatic dist/apps/frontend",
    "frontend:release": "docker build -t dfcomps-frontend . -f ./build/frontend/frontend.dockerfile && docker save dfcomps-frontend | ssh -C root@dfcomps.ru \"docker load && docker stop dfcomps-frontend || true && docker rm dfcomps-frontend || true && docker run -d -p 127.0.0.1:4000:80 --name dfcomps-frontend dfcomps-frontend\"",
    "backend": "cross-env DFCOMPS_POSTGRES_PASSWORD=admin nx serve backend",
    "backend:build": "nx build backend",
    "backend:release": "docker build -t dfcomps-backend . -f ./build/backend/backend.dockerfile && docker save dfcomps-backend | ssh -C root@dfcomps.ru \"docker load && docker stop dfcomps-backend || true && docker rm dfcomps-backend || true && docker run -d -p 127.0.0.1:4001:4001 --name dfcomps-backend --network dfcomps-network --env-file /usr/local/bin/secrets.env dfcomps-backend\"",
    "database:setup": "docker-compose -f build/database/docker-compose.postgres.yml up -d --wait && npm run database:restore-db && npm run database:restore-diff-db",
    "database:restore-db": "docker exec local_pgdb dropdb --if-exists -f -h localhost -p 5432 -U user dfcomps && docker cp build/database/dev-database.tar local_pgdb:/var/lib/postgresql/dev-database.tar && docker exec local_pgdb createdb -h localhost -p 5432 -U user dfcomps && docker exec local_pgdb pg_restore -U user -d dfcomps /var/lib/postgresql/dev-database.tar",
    "database:restore-diff-db": "docker exec local_pgdb_diff dropdb --if-exists -f -h localhost -p 5432 -U user dfcomps && docker cp build/database/dev-database.tar local_pgdb_diff:/var/lib/postgresql/dev-database.tar && docker exec local_pgdb_diff createdb -h localhost -p 5432 -U user dfcomps && docker exec local_pgdb_diff pg_restore -U user -d dfcomps /var/lib/postgresql/dev-database.tar",
    "database:save-db": "docker exec local_pgdb pg_dump -U user dfcomps -f /var/lib/postgresql/dev-database.tar -F t && docker cp local_pgdb:/var/lib/postgresql/dev-database.tar build/database/dev-database.tar",
    "database:generate-migrations": "docker-compose -f build/database/docker-compose.liquibase-diff.yml up -d --wait && node -e \"setTimeout(()=>{},3000)\" && docker cp liquibase_container:/liquibase/dfcomps.changelog.json build/database/dfcomps.changelog.json && npm run database:save-db && docker rm -f liquibase_container",
    "database:migrate-prod": "scp build/database/dfcomps.changelog.json root@dfcomps.ru:/usr/local/bin && ssh root@dfcomps.ru \"docker-compose -f /usr/local/bin/docker-compose.liquibase-update.yml up -d && rm /usr/local/bin/dfcomps.changelog.json \" && npm run database:restore-db && npm run database:restore-diff-db",
    "discord-bot": "nx serve discord-bot",
    "discord-bot:build": "nx build discord-bot",
    "1v1-server:prod": "cross-env NODE_ENV=production nx serve 1v1-server",
    "1v1-server:local": "cross-env NODE_ENV=test nx serve 1v1-server",
    "1v1-server:test": "concurrently \"npm run 1v1-server:local\" \"wait-on tcp:3000 && nx test 1v1-server --runInBand\"",
    "1v1-server:test:ci": "concurrently \"cross-env LOGS=none npm run 1v1-server:local\" \"wait-on tcp:3000 && nx test 1v1-server --runInBand\"",
    "1v1-server:stress-test": "concurrently \"cross-env E2E=true npm run 1v1-server:local\" \"wait-on tcp:3000 && ts-node --project apps/1v1-server/tsconfig.app.json apps/1v1-server/src/app/1v1/tests/client-stress-testing.ts\"",
    "1v1-server:stress-test:ci": "concurrently \"cross-env LOGS=none E2E=true npm run 1v1-server:local\" \"wait-on tcp:3000 && ts-node --project apps/1v1-server/tsconfig.app.json apps/1v1-server/src/app/1v1/tests/client-stress-testing.ts\"",
    "1v1-server:build": "nx build 1v1-server",
    "1v1-server:release": "docker build -t dfcomps-1v1-server . -f ./build/1v1-server/1v1-server.dockerfile && docker save dfcomps-1v1-server | ssh -C root@dfcomps.ru \"docker load && docker stop dfcomps-1v1-server || true && docker rm dfcomps-1v1-server || true && docker run -d -p 127.0.0.1:4002:4002 --name dfcomps-1v1-server --network dfcomps-network --env-file /usr/local/bin/secrets.env dfcomps-1v1-server\"",
    "race:local": "cross-env NODE_ENV=test nx serve race",
    "race:test": "concurrently \"npm run race:local\" \"wait-on tcp:4006 && nx test race --runInBand\"",
    "file-storage:release": "docker build -t dfcomps-file-storage . -f ./build/file-storage/file-storage.dockerfile && docker save dfcomps-file-storage | ssh -C root@dfcomps.ru \"docker load && docker run -d -p 127.0.0.1:4003:80 --name dfcomps-file-storage --network dfcomps-network --mount source=dfcomps-files,target=/var/www/html dfcomps-file-storage\"",
    "full-local-test:build": "docker build -t dfcomps-nginx-local . -f ./build/local-nginx/local-nginx.dockerfile",
    "full-local-test:run": "docker run -d -p 127.0.0.1:80:80 --name dfcomps-nginx-local --network dfcomps-network dfcomps-nginx-local",
    "dfcomps:release": "npm run database:migrate-prod && npm run frontend:release && npm run backend:release && npm run 1v1-server:release"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "16.2.0",
    "@angular/cdk": "16.2.0",
    "@angular/common": "16.2.0",
    "@angular/compiler": "16.2.0",
    "@angular/core": "16.2.0",
    "@angular/forms": "16.2.0",
    "@angular/material": "16.2.0",
    "@angular/platform-browser": "16.2.0",
    "@angular/platform-browser-dynamic": "16.2.0",
    "@angular/router": "16.2.0",
    "@nestjs/common": "10.0.2",
    "@nestjs/core": "10.0.2",
    "@nestjs/mapped-types": "2.0.2",
    "@nestjs/platform-express": "10.0.2",
    "@nestjs/typeorm": "10.0.0",
    "@nx/angular": "16.6.0",
    "@nx/nest": "16.6.0",
    "@types/cookie-parser": "1.4.4",
    "@types/express-ws": "3.0.2",
    "chart.js": "4.3.3",
    "cookie-parser": "1.4.6",
    "copy-webpack-plugin": "11.0.0",
    "discord.js": "12.3.1",
    "express": "4.17.3",
    "express-ws": "5.0.2",
    "flag-icons": "6.9.5",
    "html-entities": "2.4.0",
    "lodash": "4.17.21",
    "moment": "2.29.4",
    "moment-timezone": "0.5.43",
    "ng2-charts": "5.0.2",
    "ngx-cookie-service": "16.0.0",
    "ngx-quill": "22.0.0",
    "pg": "8.11.2",
    "quill": "1.3.7",
    "reflect-metadata": "0.1.13",
    "rxjs": "7.8.1",
    "typeorm": "0.3.17",
    "uuid": "9.0.0",
    "ws": "8.13.0",
    "zone.js": "0.13.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "16.2.5",
    "@angular-devkit/core": "16.2.0",
    "@angular-devkit/schematics": "16.2.0",
    "@angular-eslint/eslint-plugin": "16.1.0",
    "@angular-eslint/eslint-plugin-template": "16.1.0",
    "@angular-eslint/template-parser": "16.1.0",
    "@angular/cli": "16.2.0",
    "@angular/compiler-cli": "16.2.0",
    "@angular/language-service": "16.2.0",
    "@nestjs/schematics": "10.0.2",
    "@nestjs/testing": "10.0.2",
    "@nx/cypress": "16.6.0",
    "@nx/eslint-plugin": "16.6.0",
    "@nx/jest": "16.6.0",
    "@nx/linter": "16.6.0",
    "@nx/nest": "16.6.0",
    "@nx/node": "16.6.0",
    "@nx/workspace": "16.6.0",
    "@schematics/angular": "16.2.0",
    "@types/faker": "5.5.9",
    "@types/jest": "29.5.3",
    "@types/lodash": "4.14.197",
    "@types/node": "20.4.10",
    "@types/uuid": "9.0.2",
    "@typescript-eslint/eslint-plugin": "5.60.1",
    "@typescript-eslint/parser": "5.60.1",
    "concurrently": "8.2.0",
    "cross-env": "7.0.3",
    "cypress": "12.17.3",
    "eslint": "8.47.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "2.14.0",
    "faker": "5.5.3",
    "generate-package-json-webpack-plugin": "2.6.0",
    "husky": "8.0.3",
    "jest": "29.6.2",
    "jest-environment-jsdom": "29.6.2",
    "jest-preset-angular": "13.1.1",
    "nx": "16.6.0",
    "prettier": "3.0.1",
    "superstatic": "9.0.3",
    "ts-jest": "29.1.1",
    "ts-mockito": "2.6.1",
    "ts-node": "10.9.1",
    "tslib": "2.6.1",
    "typescript": "5.1.6",
    "wait-on": "7.0.1"
  }
}
